include("general")

func SaveEnvironment()
  // --- Сохраняем окружение родительского контейнера
  old_local_vars = BLK_LOC_VAR
  old_local_methods = BLK_METHODS
  old_oncreate = BLK_ON_CREATE
  old_ondestroy = BLK_ON_DESTROY
  old_class_name = CURRENT_CLASS
  old_import = BLK_IMPORT
  old_classes = BLK_CLASSES

  old_parent_id = PARENT_ID
  old_finalize = ARR_FINALIZE
  // ---
end

func RestoreEnvironment()
  // --- Восстанавливаем окружение родительского контейнера
  BLK_LOC_VAR = old_local_vars
  BLK_METHODS = old_local_methods
  BLK_ON_CREATE = old_oncreate
  BLK_ON_DESTROY = old_ondestroy
  CURRENT_CLASS = old_class_name
  BLK_IMPORT = old_import
  BLK_CLASSES = old_classes

  PARENT_ID = old_parent_id

  cur_finalize = ARR_FINALIZE
  ARR_FINALIZE = old_finalize
  // ---
end

func SetEnvironment()
  // --- Создаем окружение текущего контейнера
  BLK_LOC_VAR = local_vars
  BLK_METHODS = local_methods
  BLK_ON_CREATE = cur_oncreate
  BLK_ON_DESTROY = cur_ondestroy
  CURRENT_CLASS = cur_class_name
  BLK_IMPORT = cur_import
  BLK_CLASSES = cur_classes
  
  PARENT_ID = sys.curelement()
  ARR_FINALIZE = cur_finalize
  // ---
end

// ============================================ INIT ============================================== //

func Init()
  fvar(old, tmp, this)
  var(onreceive_block)
  var(cur_class_name, local_vars, local_methods, cur_oncreate,
      cur_ondestroy, cur_import, cur_classes, cur_finalize)

  var(old_class_name, old_local_vars, old_local_methods, old_oncreate,
      old_ondestroy, old_import, old_classes, old_parent_id, old_finalize)


  this = sys.curelement()
  sys.selectelement(cgt.el_get_parent_id()) // Receiver
  tmp = (SysName = '')?(receiver):(code(SysName))
  sys.selectelement (this) // ChildReceiver
  cur_class_name = tmp


  // --- Подготавливаем окружение текущего контейнера
  local_vars = block.reggen()
  local_methods = block.reggen()
  cur_oncreate = block.reggen()
  cur_ondestroy = block.reggen()
  cur_import = block.reggen()
  cur_classes = block.reggen()

  cur_finalize &= ''

  old = block.cur()

  // --- Сохраняем окружение родительского контейнера
  SaveEnvironment()

  // --- Создаем окружение текущего контейнера
  SetEnvironment()


  block.select(BLK_IMPORT)
    println('package ', PACKAGE_NAME, ';')
    println('import android.content.BroadcastReceiver;')
    println('import android.content.Context;')
    println('import android.content.Intent;')

  block.select(BLK_LOC_VAR)
    println ('private Context mContext;')
    
  if (linked(Intent))
      AddVar(intnt, 'Intent')
  end
    
    
  sys.initall()

    // ======== Обработка событий ======== //
      
      onreceive_block = block.reggen()
      block.select(onreceive_block)

      if (linked(Intent))
        println(intnt, ' = intent;')
      end
      event(onReceive, MakeData('intent', 'Intent'))

    // ======== ================= ======== //

  block.select(old)

  // --- Восстанавливаем окружение родительского контейнера
  RestoreEnvironment()

end

// ========================================================================================== //


func Intent()
  return(MakeData(intnt, 'Intent'))
end


// ============================================ FINISH ============================================== //
func Finish()
  fvar(old, tmp, i, this, class_body, cls_index)

  old = block.cur()

  // --- Сохраняем окружение родительского контейнера
  SaveEnvironment()

  // --- Создаем окружение текущего контейнера
  SetEnvironment()


  // ********** Вызов метода finish() зарегистрированных компонентов *********** //

    for (i = 1; i<_arr.count(ARR_FINALIZE); i++)
      sys.event(ARR_FINALIZE[i], 'finish')
    end

  // *************************************************************************** //


// ******** Тело класса ******** //

  class_body = block.reggen()
  ARR_CLASSES &= "x"
  cls_index = _arr.count(ARR_CLASSES)-1
  ARR_CLASSES[cls_index] = cur_class_name & class_body

  block.select(class_body)

  block.copyhere(cur_import)
  block.delete(cur_import)

  println('public class ', cur_class_name, ' extends BroadcastReceiver')
  println('{')
    block.inclvl()

    block.copyhere(local_vars)
    block.delete(local_vars)
    
    println ('public Context getApplicationContext()')
    println ('{')
    println ('  return mContext;')
    println ('}')
    
    println ('@Override')
    println ('public void onReceive(Context context, Intent intent)')
    println ('{')
      block.inclvl()
        println ('mContext = context;')
        
        block.copyhere(cur_oncreate)
        block.delete(cur_oncreate)

        block.copyhere(onreceive_block)
        block.delete(onreceive_block)
        
        block.copyhere(cur_ondestroy)
        block.delete(cur_ondestroy)
        
      block.declvl()
    println ('}')
    
    block.copyhere(local_methods)
    block.delete(local_methods)

  block.declvl()
  println('}') // Закрывающая скобка текущего класса

  // Дополнительные классы
  block.copyhere(cur_classes)
  block.delete(cur_classes)

// ******************************** //

// ******** MANIFEST ******** //

    tmp = block.reggen()
    block.select(tmp)
    
      print('<receiver android:name=".', cur_class_name, '" ')

      this = sys.curelement()
      sys.selectelement(cgt.el_get_parent_id()) // Receiver
      
        if (isndef(Icon))
          lng.proptofile(Icon, 'Elements\Android\code\result\res\drawable\\'&& ricon && '.png')
          print('android:icon="@drawable/', ricon,'" ')
        end
        println('android:label=', lng.strtoxml(Label),'>')

        block.inclvl()
          if (isndef(StandardAction))
            i = "android.intent.action." + StandardAction
            switch (StandardAction)
              case "BOOT_COMPLETED": PermissionRequired('android.permission.RECEIVE_BOOT_COMPLETED')
              case "NEW_OUTGOING_CALL": PermissionRequired('android.permission.PROCESS_OUTGOING_CALLS')
            end
          else
            i = Action
          end
          
          if (i <> "")
            println('<intent-filter>')
              block.inclvl()
                println('<action android:name=', i, ' />')
                if (isndef(Categories))
                  for (i = 0; i<_arr.count(Categories); i++)
                    println('<category android:name=', Categories[i],' />')
                  end
                end
              block.declvl()
            println('</intent-filter>')
          end
          if (isndef(Permissions))
            for (i = 0; i<_arr.count(Permissions); i++)
              PermissionRequired(code(Permissions[i]))
            end
          end

        block.declvl()
      println('</receiver>')

      sys.selectelement (this) // ChildReceiver

    block.select('BLK_MAINBODY')
    MFAddComponent(tmp)
    block.delete(tmp)

// ************************ //

  block.select(old)

  // --- Восстанавливаем окружение родительского контейнера
  RestoreEnvironment()

end

// ========================================================================================== //


