include("General")

func init()
  includeLibrary('javax_mail')
  includeLibrary('javax_mail_activation')
  includeLibrary('javax_mail_additionnal')
   
  addToImport('javax.mail.*')
  addToImport('javax.mail.internet.*')
  addToImport('java.io.BufferedReader')
  addToImport('java.io.InputStreamReader')
  addToImport('java.nio.CharBuffer')
  
  addVar(store, 'Store')
  addVar(folder, 'Folder') 
  addVar(mFrom, 'String')
  addVar(mSubj, 'String')
  addVar(mCont, 'String')
  addVar(enumToggle + ' = true', 'boolean')
  
  permissionRequired('android.permission.INTERNET')
end

func threadStart()
  println('new Thread(new Runnable() {')
    block.inclvl()
      println('public void run() {')
        block.inclvl()
end

func threadEnd()
          block.declvl()
      println('}')
    block.declvl()
  println('}).start();')
end

func doConnect(_data)
  threadStart()
    println('try {')
      block.inclvl()
        println('Session ',session,' = Session.getDefaultInstance(System.getProperties());')
        println(store,' = ',session,'.getStore("pop3");')
        println(store,'.connect(',e_str(URL),', ',e_str(Username),', ',e_str(Password),');')
        println(folder,' = ',store,'.getDefaultFolder().getFolder("inbox");')
        println(folder,'.open(Folder.READ_ONLY);')
        event(onConnect, (store + '.isConnected()')@Boolean)  
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        println(e,'.printStackTrace();')
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func doDisconnect(_data)
  threadStart()
    println('try {')
      block.inclvl()
        println(store,'.close();')
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func doEnum(_data)
  println(enumToggle,' = true;')
  threadStart()
    println('try {')
      block.inclvl()
        println('for(Message ',message,' : ',folder,'.getMessages()) {')
	      block.inclvl()
	        println('if (!',enumToggle,') break;')
	        println(mFrom,' = ((InternetAddress) ',message,'.getFrom()[0]).getPersonal();')
	        println(mSubj,' = ',message,'.getSubject();')
            println('CharBuffer ',buf,' = CharBuffer.allocate(1);')
            println('BufferedReader ',reader,' = new BufferedReader(new InputStreamReader(',message,'.getInputStream(), "windows-1251"));')
            println(reader,'.read(',buf,');')
            println(mCont,' = new String(',buf,'.array());')
	        event(onMessage, mSubj)
	      block.declvl()
        println('}')
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        println(e,'.printStackTrace();')
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func doStopEnum(_data)
  println(enumToggle,' = false;')
end

func doOpenByIndex(_data)
  threadStart()
    println('try {')
      block.inclvl()
        println('Message ',message,' = ',folder,'.getMessages()[',e_int(_data),'];')
        println(mFrom,' = ((InternetAddress) ',message,'.getFrom()[0]).getPersonal();')
        println(mSubj,' = ',message,'.getSubject();')
        println('BufferedReader ',reader,' = new BufferedReader(new InputStreamReader(',message,'.getInputStream(), "windows-1251"));')
		println('String ',l,' = "";')
        println('StringBuilder ',b,' = new StringBuilder();')
		println('while ((',l,' = ',reader,'.readLine()) != null)')
		println('  ',b,'.append(',l,').append("\n");')
        println(mCont,' = ',b,'.toString();')
        event(onOpenByIndex)
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        println(e,'.printStackTrace();')
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func doDefFolder(_data)
  threadStart()
    println('try {')
      block.inclvl()
        println(folder,' = ',store,'.getDefaultFolder();')	
        println(folder,'.open(Folder.READ_ONLY);')
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func doOpenFolder(_data)
  threadStart()
    println('try {')
      block.inclvl()
        println(folder,' = ',folder,'.getFolder(',e_str(_data),');')
        println(folder,'.open(Folder.READ_ONLY);')
      block.declvl()
    println('} catch (final Exception ',e,') {')
      block.inclvl()
        event(onError, e + '.getMessage()')
      block.declvl()
    println('}')
  threadEnd()
end

func `Count`()
  return(folder + '.getMessages().length')
end

func From()
  return(mFrom)
end

func Subject()
  return(mSubj)
end

func Content()
  return(mCont)
end